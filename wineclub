# https://api.wine.com/
#All users are signed up for "Developer" plan by default, with limited access to data 
#and a limit of 1,000 calls per day. To request an evaluation to receive full access 
#to the data within the Wine.com API and additional call per day please send your user 
#name and an active URL or screenshots of your proposed use to bizdev@wine.com.

## about JSON 
# https://cran.r-project.org/web/packages/jsonlite/vignettes/json-apis.html
#https://cran.r-project.org/web/packages/jsonlite/vignettes/json-paging.html

#WineURL <- "http://services.wine.com/api/beta2/service.svc/format/resource?apikey=key&parameters"
#key <- "5a78c4ece08788c4892025a4a0186526"

#  back out to main directory
setwd("/..")
## 
setwd("/Users/Andrea/Dropbox/Visualizations/data")
if(!require(plyr)){install.packages("plyr") 
                    library(plyr)}
if(!require(dplyr)){install.packages("dplyr")
                      library(dplyr)}
if(!require(jsonlite)){install.packages("jsonlite") 
                        library(jsonlite)}
if(!require(tidyjson)){install.packages("tidyjson")
                          "tidyjson"}

key <- "5a78c4ece08788c4892025a4a0186526"
url <- "http://services.wine.com/api/beta2/service.svc/JSON/catalog?"
s1 <- "state=WA&" #shipped to the state of Washington
o1 <- "offset="
o2 <- "&size=100&apikey="
## list of fields to pull out of the file
Catalog <- c()

i <- 57300

while (i < 100000) {

winedotcom <-fromJSON(paste0(url,s1,o1,i,o2,key))
wineCatalog <-data.frame(flatten(winedotcom$Products$List, recursive = TRUE))
## fields for no state (s1) Catalog<-rbind(Catalog,wineCatalog[c(1,2,5,6,8:10,13,14,16,17,19:21,23,24,26,27,40)])
## fields for s1 parameter
Catalog<-rbind(Catalog,wineCatalog[c(1,2,5,6,8:10,12,13,15,16,18:20,22,23,25,26,39,41:44)])
i <- i+100
}


write.table(Catalog, "winedotcomwa.txt", row.names = FALSE, col.names = TRUE, sep = "\t", eol = "\n", na = "NA")







# wineAttributes <-toJSON(wineCatalog[c(1,11)])
# y<-wineCatalog[c(1,11)]
# 
# wine <-as.tbl_json(url)
# 
# y<-wine %>%
#   enter_object("Products") %>% 
#   enter_object("List") %>% 
#   spread_values(Prod.Id = jnumber("Id")) %>%
#   spread_values(Prod.Name = jstring("Name")) %>%
#   spread_values(Prod.Type = jstring("Type")) %>%
#   spread_values(Prod.Vintage = jstring("Vintage")) %>%
#   select(Prod.Id, Prod.Name, Prod.Type, Prod.Vintage)
#   
#   # enter_object("ProductAttributes") %>% gather_array %>%
#   # spread_values(
#   #   AttributeId<- jstring("Id"),
#   #   AttributeName<- jstring("Name"),
#   #   AttributeURL<- jstring("Url"),
#   #   AttributeImageUrl<- jstring("ImageUrl")
#   #)
  
 
#names<-lapply(wineCatalog$Labels, `[[`,"Name")
#url<-lapply(wineCatalog$Labels, `[[`,"Url")

#winedotcom <-jsonlite::fromJSON("http://services.wine.com/api/beta2/service.svc/JSON/catalog?offset=0&size=3&apikey=5a78c4ece08788c4892025a4a0186526", simplifyDataFrame = TRUE)
#wineCatalog <-data.frame(winedotcom$Products$List)  # returns 10 obs of 19 variables
#wineCatalog <-flatten(data.frame(winedotcom$Products$List))# returns 10 obs of 42 variables because data frames are now converted to their own columns

#catalog <-flatten(wineCatalog[1:4])  ##  need to convert the data frames to individual columns
#write.csv(catalog,test)  ##  will work with flattened dataframes
#catNames <-names(wineCatalog)

#install.packages("tidyjson")
#library(tidyjson)
#library(dplyr)
# 
# wine <-as.tbl_json("http://services.wine.com/api/beta2/service.svc/JSON/catalog?offset=0&size=5&apikey=5a78c4ece08788c4892025a4a0186526")
# attr(wine,"JSON")
# capture.output(attr(wine,"JSON"), file = "wine.txt")
# 
# json_types(winedottbl)
# wine %>% gather_keys %>% json_types %>% json_lengths
# #document.id      key       type      length
# #   1           Status      object      2
# #   1           Products    object      4
# wine %>% enter_object("Products") %>% gather_keys %>% json_types %>% json_lengths
# # document.id     key         type      length
# #   1             List        array       5
# #   1             Offset      number      1
# #   1             Total       number      1
# #   1             Url         string      1
# 
# 
# wine %>% enter_object("Products.List") %>% gather_keys %>% json_types %>% json_lengths
# # [1] document.id key         type        length     
# # <0 rows> (or 0-length row.names)
# 
# wine %>% enter_object("Products.Offset") %>% gather_keys %>% json_types %>% json_lengths
# wine %>% enter_object("Products.URL") %>% gather_keys %>% json_types %>% json_lengths
# wine %>% enter_object("Products.List.Labels") %>% gather_keys %>% json_types %>% json_lengths
# 
# 
#                
# 
# 
# 
# 
# 
# 
# 
# # 
# # 
# # catWine <-fromJSON("http://services.wine.com/api/beta2/service.svc/JSON/categorymap")
# # winedotcom <-fromJSON("http://services.wine.com/api/beta2/service.svc/JSON/categorymap?apikey=5a78c4ece08788c4892025a4a0186526")
# # 
# # list(winedotcom)
# # names(winedotcom)
# # str(winedotcom)
# # winedotcom$Categories$Refinements
# # 
# # wineCategory <-data.frame(winedotcom$Categories$Refinements)
# # 
# # 
# # winedotcom <-fromJSON("http://services.wine.com/api/beta2/service.svc/JSON/catalog?apikey=5a78c4ece08788c4892025a4a0186526")
# # head(winedotcom$Products$List)
# # wineCatalog <-data.frame(winedotcom$Products$List)
# # 
# # #/catalog?filter=categories(490+124)&offset=10&size=5&apikey=key
# # 
# # 
# # 
# # winedotcom <-fromJSON("http://services.wine.com/api/beta2/service.svc/JSON/reference?apikey=5a78c4ece08788c4892025a4a0186526")
# # list(winedotcom)
# # wineReferenceBooks <-data.frame(winedotcom$Books)
# # #wineReferenceArticles <-data.frame(winedotcom$Books$Articles)
# # list(winedotcom$Books$Articles)
# # # json_file <- lapply(wineAttributes, function(x) {
# # x[sapply(x, is.null)] <- NA
# # unlist(x)
# # })
# # json_file <-toJSON(json_file)
# # json_data <- fromJSON(json_file)
# # library(plyr)
# # library(dplyr)
# # asFrame <- do.call("rbind.fill", lapply(json_data, as.data.frame))
# # 
# # # 
# # # 
# # # 
# 
# 

